services:
  db:
    image: postgres:16-alpine
    container_name: fuel_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/00-init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build:
      context: ./backend
    container_name: fuel_backend
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SESSION_SECRET: ${SESSION_SECRET}
      NODE_ENV: ${NODE_ENV}
      PORT: ${BACKEND_PORT}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT}:8080"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
      interval: 10s
      timeout: 3s
      retries: 5

  frontend:
    build:
      context: ./frontend
    container_name: fuel_frontend
    env_file: .env
    environment:
      VITE_API_URL: ${VITE_API_URL}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT}:5173"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5173/"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  db_data: