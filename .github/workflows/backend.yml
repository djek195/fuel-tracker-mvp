name: Backend CI

on:
  # Trigger on changes to backend source, migrations, routes, and workflow itself.
  pull_request:
    paths:
      - "backend/**"
      - "db/**"
      - ".github/workflows/backend.yml"
      - "db/**/*.sql"           # watch SQL migration files
      - "backend/src/routes/**" # watch new routes like vehicles/fuel
  push:
    branches: [ main ]
    paths:
      - "backend/**"
      - "db/**"
      - ".github/workflows/backend.yml"
      - "db/**/*.sql"
      - "backend/src/routes/**"

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: vitest (backend + pg)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: fuel
          POSTGRES_PASSWORD: fuelpass
          POSTGRES_DB: fueltracker
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U fuel -d fueltracker" \
          --health-interval=5s \
          --health-timeout=5s \
          --health-retries=10

    env:
      CI: true
      NODE_ENV: test
      SESSION_SECRET: replace_me
      DATABASE_URL: postgres://fuel:fuelpass@localhost:5432/fueltracker

    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            (echo > /dev/tcp/127.0.0.1/5432) >/dev/null 2>&1 && break
            echo "‚è≥ waiting for postgres (attempt $i)"; sleep 1
          done

      - name: Install dependencies
        run: npm ci

      # compile TypeScript before running tests to catch build errors
      - name: Build TypeScript
        run: npm run build --if-present

      - name: Run tests
        run: npm run test